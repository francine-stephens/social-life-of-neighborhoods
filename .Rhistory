install.packages("blogdown")
install.packages("blogdown")
blogdown::install_hugo()
knitr::opts_chunk$set(echo=T)
## LIBRARIES
packages <- c(
"readr",
"tidyverse",
"sf",
"ggplot2",
"scales",
"units",
"ggcorrplot",
"modelsummary",
"stargazer",
"tmap",
"tigris",
"censusapi",
"tidycensus",
"corrplot",
"RColorBrewer"
)
lapply(packages, library, character.only = T)
## PATHS
setwd("~/Projects/public_space")
wd <- getwd()
green_space_path <- "/green_space/gee/"
census_data_path <- "/census"
shp_repo <- "C:/Users/Franc/Documents/Shapefile_Repository"
shp2010_path <- "/2010USA_CensusGeog_Shp"
cbsa_path <- "/tl_2010_us_cbsa10/"
metdiv_path <- "/tl_2010_us_metdiv10/"
cbg10_path <- "/us_blck_grp_2010/"
places10_path <- "/tl2010_us_place_2010/"
## APIs
census_api_key("99ccb52a629609683f17f804ca875115e3f0804c",  overwrite = T)
Sys.setenv(CENSUS_KEY="99ccb52a629609683f17f804ca875115e3f0804c")
## DATA IMPORTS-----------------------------------------------------------------
evi_all_decades_cbg <- readRDS(paste0(wd,
green_space_path,
"evi_all_years_on_2010cbg.rds"))
ndvi_2010_cbg <- read_csv(paste0(wd,
green_space_path,
"NDVI_2010_by_cbg10.csv"))
rm(ndvi_2010_cbg)
race_all_decades_cbg <- readRDS(paste0(wd,
census_data_path,
"/all_decades_race_on_cbg10.rds"))
counties <- get_decennial(geography = "county",
variables = "P001001",
year = 2010)
places <- get_decennial(geography = "place",
variables = "P001001",
year = 2010)
cbg_higher_geog_ids <- readRDS(paste0(shp_repo,
"/cbg_full_geog_identifers.rds"))
top100_cbsa <- read_csv(paste0(shp_repo,
"/top100_cbsa_2010bounds.csv"))
top100_places <- read_csv(paste0(shp_repo,
"/top100_places_2010bounds.csv"))
View(cbg_higher_geog_ids)
View(counties)
cbg_all_geoids <- cbg10 %>%
st_set_geometry(NULL) %>%
select(GEOID10, GISJOIN) %>%
left_join(., cbg_higher_geog_ids, by=c("GEOID10", "GISJOIN")) %>%
mutate(PLACEFP_DERIVED = if_else(is.na(PLACEID),
str_sub(GEOID10, end=5),
PLACEID)) %>%
left_join(., counties, by = "PLACEFP_DERIVED") %>%
mutate(PLACE_DERIVED_NM=coalesce(PLACE_DERIVED_NM, PLACE_NM)) %>%
relocate(PLACEFP_DERIVED, .after=PLACEID) %>%
relocate(PLACE_DERIVED_NM, .after=PLACE_NM) %>%
left_join(., top100_places, by=c("PLACEID"="PLACEFP")) %>%
left_join(., top100_cbsa, by=c("CBSAFP10"="CBSAFP"))
## SHAPEFILE IMPORTS
cbg10 <- st_read(paste0(shp_repo,
shp2010_path,
cbg10_path,
"US_blck_grp_2010.shp"),
quiet = F)
cbg_all_geoids <- cbg10 %>%
st_set_geometry(NULL) %>%
select(GEOID10, GISJOIN) %>%
left_join(., cbg_higher_geog_ids, by=c("GEOID10", "GISJOIN")) %>%
mutate(PLACEFP_DERIVED = if_else(is.na(PLACEID),
str_sub(GEOID10, end=5),
PLACEID)) %>%
left_join(., counties, by = "PLACEFP_DERIVED") %>%
mutate(PLACE_DERIVED_NM=coalesce(PLACE_DERIVED_NM, PLACE_NM)) %>%
relocate(PLACEFP_DERIVED, .after=PLACEID) %>%
relocate(PLACE_DERIVED_NM, .after=PLACE_NM) %>%
left_join(., top100_places, by=c("PLACEID"="PLACEFP")) %>%
left_join(., top100_cbsa, by=c("CBSAFP10"="CBSAFP"))
counties <- counties %>%
select(PLACEFP_DERIVED="GEOID", PLACE_DERIVED_NM="NAME")
cbg_all_geoids <- cbg10 %>%
st_set_geometry(NULL) %>%
select(GEOID10, GISJOIN) %>%
left_join(., cbg_higher_geog_ids, by=c("GEOID10", "GISJOIN")) %>%
mutate(PLACEFP_DERIVED = if_else(is.na(PLACEID),
str_sub(GEOID10, end=5),
PLACEID)) %>%
left_join(., counties, by = "PLACEFP_DERIVED") %>%
mutate(PLACE_DERIVED_NM=coalesce(PLACE_DERIVED_NM, PLACE_NM)) %>%
relocate(PLACEFP_DERIVED, .after=PLACEID) %>%
relocate(PLACE_DERIVED_NM, .after=PLACE_NM) %>%
left_join(., top100_places, by=c("PLACEID"="PLACEFP")) %>%
left_join(., top100_cbsa, by=c("CBSAFP10"="CBSAFP"))
#DATA PREPARATION---------------------------------------------------------------
## MERGE ALL GEOIDs
top100_cbsa <- top100_cbsa %>%
mutate(CBSAFP = as.character(CBSAFP)) %>%
select(-CBSA_NM) %>%
rename(top100_cbsa="top_100", cbsa_rank_pop_size="rank_pop_size")
cbg_all_geoids <- cbg10 %>%
st_set_geometry(NULL) %>%
select(GEOID10, GISJOIN) %>%
left_join(., cbg_higher_geog_ids, by=c("GEOID10", "GISJOIN")) %>%
mutate(PLACEFP_DERIVED = if_else(is.na(PLACEID),
str_sub(GEOID10, end=5),
PLACEID)) %>%
left_join(., counties, by = "PLACEFP_DERIVED") %>%
mutate(PLACE_DERIVED_NM=coalesce(PLACE_DERIVED_NM, PLACE_NM)) %>%
relocate(PLACEFP_DERIVED, .after=PLACEID) %>%
relocate(PLACE_DERIVED_NM, .after=PLACE_NM) %>%
left_join(., top100_places, by=c("PLACEID"="PLACEFP")) %>%
left_join(., top100_cbsa, by=c("CBSAFP10"="CBSAFP"))
View(cbg_all_geoids)
cbg_all_geoids <- cbg10 %>%
st_set_geometry(NULL) %>%
select(GEOID10, GISJOIN) %>%
left_join(., cbg_higher_geog_ids, by=c("GEOID10", "GISJOIN")) %>%
mutate(PLACEFP_DERIVED = if_else(is.na(PLACEID),
str_sub(GEOID10, end=5),
PLACEID)) %>%
left_join(., counties, by = "PLACEFP_DERIVED") %>%
mutate(PLACE_DERIVED_NM=coalesce(PLACE_DERIVED_NM, PLACE_NM)) %>%
relocate(PLACEFP_DERIVED, .after=PLACEID) %>%
relocate(PLACE_DERIVED_NM, .after=PLACE_NM) %>%
left_join(., top100_places, by=c("PLACEID"="PLACEFP")) %>%
left_join(., top100_cbsa, by=c("CBSAFP10"="CBSAFP")) %>%
mutate(in_metro = if_else(str_detect(CBSA_NM, "Metro"),
"Metropolitan Area",
"Micropolitan Area")
)
# PERCENT
race_pct_all_decades_cbg <- race_all_decades_cbg %>%
mutate_at(vars(WHITE_NH_10:HISPANIC_10), funs("percent" = (./TOT_POP_10) * 100)) %>%
mutate_at(vars(WHITE_NH_00:HISPANIC_00), funs("percent" = (./TOT_POP_00) * 100)) %>%
select(CBG_10, TOT_POP_10, TOT_POP_00, WHITE_NH_10_percent:HISPANIC_00_percent)
View(race_all_decades_cbg)
View(race_all_decades_cbg)
# PERCENT
race_pct_all_decades_cbg <- race_all_decades_cbg %>%
long_panel(., prefix = "_", periods = c(10, 00, 90), label_location = "end")
install.packages("panelr")
## LIBRARIES
packages <- c(
"readr",
"tidyverse",
"sf",
"ggplot2",
"scales",
"units",
"ggcorrplot",
"modelsummary",
"stargazer",
"panelr",
"tmap",
"tigris",
"censusapi",
"tidycensus",
"corrplot",
"RColorBrewer"
)
lapply(packages, library, character.only = T)
# PERCENT
race_pct_all_decades_cbg <- race_all_decades_cbg %>%
long_panel(., prefix = "_", periods = c(10, 00, 90), label_location = "end")
View(race_pct_all_decades_cbg)
setwd("~/Stanford/SOC176/social-life-of-neighborhoods")
library(bookdown)
bookdown:::bookdown_skeleton(getwd())
bookdown::render_book()
bookdown::render_book()
bookdown::publish_book()
install.packages("rsconnect")
library(rsconnect)
bookdown::publish_book()
publish_book()
bookdown::publish_book()
library("rsconnect")
library(rsconnect)
install.packages("rsconnect")
library("rsconnect")
bookdown::publish_book()
publish_book(name = NULL, account = NULL, server = NULL,
render = c("server"))
bookdown:publish_book(name = NULL, account = NULL, server = NULL, render = c("server"))
bookdown::publish_book(name = NULL, account = NULL, server = NULL, render = c("server"))
bookdown::publish_book(render = 'local')
bookdown::publish_book(render = 'local')
bookdown::publish_book(render = 'local')
library("rsconnect")
library("bookdown")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
library(rsconnect)
library(bookdown)
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
library(rsconnect)
library(bookdown)
bookdown::publish_book(render = "local")
library(bookdown)
library(rsconnect)
publish_book(render = "local")
library(rsrsconnect)
library(rsconnect)
library(bookdown)
publish_book(render = "server")
publish_book(render = "local")
publish_book(render = "local")
library(rsconnect)
library(bookdown)
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
library(rsconnect)
library(bookdown)
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
publish_book(render = "local")
library(rsconnect)
library(bookdown)
publish_book(render = "local")
library(rsconnect)
library(bookdown)
publish_book(render = "local")
